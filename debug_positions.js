// üß™ CODE DE DEBUG TEMPORAIRE - Copiez-collez dans la console

async function debugImportPositions() {
    console.log('üß™ Debug import positions...');
    console.log(`üìä √âtat initial: ${openPositions ? openPositions.length : 'openPositions undefined'} positions`);
    
    // V√©rifier les fonctions disponibles
    console.log('üîç Fonctions disponibles:');
    console.log(`importExistingPositions: ${typeof window.importExistingPositions}`);
    console.log(`makeRequest: ${typeof makeRequest}`);
    console.log(`updatePositionsDisplay: ${typeof updatePositionsDisplay}`);
    
    // V√©rifier les √©l√©ments DOM
    const positionCountEl = document.getElementById('positionCount');
    const positionsListEl = document.getElementById('positionsList');
    console.log(`üìä √âl√©ments DOM:`);
    console.log(`positionCount: ${positionCountEl ? 'TROUV√â' : 'NON TROUV√â'}`);
    console.log(`positionsList: ${positionsListEl ? 'TROUV√â' : 'NON TROUV√â'}`);
    
    if (positionCountEl) {
        console.log(`Valeur actuelle du compteur: "${positionCountEl.textContent}"`);
    }
    
    // Test de l'import si disponible
    if (typeof window.importExistingPositions === 'function') {
        try {
            console.log('üîÑ Lancement de l\'import...');
            await window.importExistingPositions();
            console.log(`üìä √âtat apr√®s import: ${openPositions ? openPositions.length : 'openPositions undefined'} positions`);
        } catch (error) {
            console.error('‚ùå Erreur import:', error);
        }
    } else {
        console.log('‚ùå Fonction importExistingPositions non disponible');
    }
}

// Lancer le debug
debugImportPositions();
